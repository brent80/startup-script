
fieldVpn
fieldvpn.service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[Unit]
Description=Run field vpn

[Service]
User=root
Restart=always
RestartSec=15
WorkingDirectory=/home/lumberjack/Private/fieldVpn
ExecStartPre=/bin/sh -c "sleep 40"
ExecStart=/bin/bash -c "/usr/local/sbin/openvpn --config /home/lumberjack/Private/fieldVpn/lumberJack-26.ovpn"

[Install]
WantedBy=multi-user.target




/lib/systemd/foo.service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[Unit]
Description=Run Script

[Service]
ExecStart=/bin/sh -c "/home/pi/scripts/test.sh"
LimitNOFILE=500000
LimitNPROC=500000
KillMode=process

[Install]
WantedBy=multi-user.target


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo systemctl daemon-reload
sudo systemctl enable /lib/systemd/foo.service
sudo systemctl start foo.service
sudo systemctl stop foo.service
To Check logs
journalctl -e -u foo.service
KillMode=
Specifies how processes of this unit shall be killed. One of control-group, process, mixed, none.

If set to control-group, all remaining processes in the control group of this unit will be killed on unit stop (for services: after the stop command is executed, as configured with ExecStop=). If set to process, only the main process itself is killed. If set to mixed, the SIGTERM signal (see below) is sent to the main process while the subsequent SIGKILL signal (see below) is sent to all remaining processes of the unit's control group. If set to none, no process is killed. In this case, only the stop command will be executed on unit stop, but no process be killed otherwise. Processes remaining alive after stop are left in their control group and the control group continues to exist after stop unless it is empty.

Processes will first be terminated via SIGTERM (unless the signal to send is changed via KillSignal=). Optionally, this is immediately followed by a SIGHUP (if enabled with SendSIGHUP=). If then, after a delay (configured via the TimeoutStopSec= option), processes still remain, the termination request is repeated with the SIGKILL signal (unless this is disabled via the SendSIGKILL= option). See kill(2) for more information.

Defaults to control-group.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


[Unit]
Description=Run rtu-client

[Service]
User=lumberjack
Restart=always
RestartSec=15
WorkingDirectory=/home/lumberjack/Private/rtu-client
ExecStartPre=/bin/sh -c "sleep 30"
ExecStart=/bin/bash -c "/home/lumberjack/Private/rtu-client/rtu-client +RTS 2>> /home/lumberjack/tmp/rtu-client.err >> /home/lumberjack/tmp/rtu-client.out"

[Install]
WantedBy=multi-user.target



chip@chip:/lib/systemd/system$ cat rtkattach.service 
[Unit]
Description=Run rtkattach

[Service]
User=root
Restart=always
RestartSec=15
WorkingDirectory=/home/chip/rtl8723ds_bt/rtk_hciattach
ExecStartPre=/bin/sh -c "/home/chip/rtl8723ds_bt/rtk_hciattach/bt_reset"
ExecStart=/bin/bash -c "/home/chip/rtl8723ds_bt/rtk_hciattach/rtk_hciattach -n -s 115200 ttyS2 rtk_h5"

[Install]
WantedBy=multi-user.target


chip@chip:~$ sudo cat /lib/systemd/system/blink.service 
[Unit]
Description=Run blink

[Service]
User=root
Restart=always
RestartSec=15
WorkingDirectory=/home/chip/
ExecStartPre=/bin/sh -c "sleep 10"
ExecStart=/bin/bash -c "/home/chip/blink-api 2>> /home/chip/blink.err >> /home/blink.out"

[Install]
WantedBy=multi-user.target

